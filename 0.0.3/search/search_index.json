{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Index \u00b6 Confis is a framework for representing legal agreements. It includes its own language to write legal contracts and the ability to ask questions in order to allow parties to figure out their legal capabilities. Quick example \u00b6 val alice by party ( \"alice\" ) val bob by party ( \"bob\" ) val pay by action // a plaintext clause that we do not wish to try to encode - \"\"\" The Licence and the terms and conditions thereof shall be governed and construed in accordance with the law of England and Wales. \"\"\" alice may { pay ( bob ) } asLongAs { with purpose ( Research ) } alice mayNot { pay ( bob ) } asLongAs { with purpose Commercial }","title":"Index"},{"location":"#index","text":"Confis is a framework for representing legal agreements. It includes its own language to write legal contracts and the ability to ask questions in order to allow parties to figure out their legal capabilities.","title":"Index"},{"location":"#quick-example","text":"val alice by party ( \"alice\" ) val bob by party ( \"bob\" ) val pay by action // a plaintext clause that we do not wish to try to encode - \"\"\" The Licence and the terms and conditions thereof shall be governed and construed in accordance with the law of England and Wales. \"\"\" alice may { pay ( bob ) } asLongAs { with purpose ( Research ) } alice mayNot { pay ( bob ) } asLongAs { with purpose Commercial }","title":"Quick example"},{"location":"Language/Circumstances/","text":"Circumstances \u00b6 Circumstances allow narrowing down when exactly a clause applies. There are several types of cirtcumstances: Purpose \u00b6 Meant to restrict a clause to acting with a specific purpose. For example: alice may { see ( data ) } asLongAs { with purpose Research } ...states that alice is Allowed to see the data , under the circumstance of having Research purposes. If the circumstance is not Research , then the answer to 'May Alice see the data?' will be Unspecified . See Clauses for more details. Time Periods \u00b6 Meant to restrict a clause to acting within a specific time period. For example: alice may { see ( data ) } asLongAs { within { ( 1 of May year 2021 )..( 1 of June year 2023 ) } } ...states that alice is Allowed to see the data , under the circumstance of doing it within 01/05/2021 and 01/06/2023, inclusive. Formats \u00b6 There are several ways of writing time periods and dates in general. All the following are valid: Specifying dates in-place: alice may { see ( data ) } asLongAs { within { ( 1 of May year 2021 )..( 1 of June year 2023 ) } } Specifying dates as variables: val startOfContract = 1 of May year 2021 val endOfContract = 1 of June year 2023 alice may { see ( data ) } asLongAs { within { startOfContract .. endOfContract } } Specifying dates within the same year: alice may { see ( data ) } asLongAs { within { ( 1 of May )..( 1 of June ) year 2022 } }","title":"Circumstances"},{"location":"Language/Circumstances/#circumstances","text":"Circumstances allow narrowing down when exactly a clause applies. There are several types of cirtcumstances:","title":"Circumstances"},{"location":"Language/Circumstances/#purpose","text":"Meant to restrict a clause to acting with a specific purpose. For example: alice may { see ( data ) } asLongAs { with purpose Research } ...states that alice is Allowed to see the data , under the circumstance of having Research purposes. If the circumstance is not Research , then the answer to 'May Alice see the data?' will be Unspecified . See Clauses for more details.","title":"Purpose"},{"location":"Language/Circumstances/#time-periods","text":"Meant to restrict a clause to acting within a specific time period. For example: alice may { see ( data ) } asLongAs { within { ( 1 of May year 2021 )..( 1 of June year 2023 ) } } ...states that alice is Allowed to see the data , under the circumstance of doing it within 01/05/2021 and 01/06/2023, inclusive.","title":"Time Periods"},{"location":"Language/Circumstances/#formats","text":"There are several ways of writing time periods and dates in general. All the following are valid: Specifying dates in-place: alice may { see ( data ) } asLongAs { within { ( 1 of May year 2021 )..( 1 of June year 2023 ) } } Specifying dates as variables: val startOfContract = 1 of May year 2021 val endOfContract = 1 of June year 2023 alice may { see ( data ) } asLongAs { within { startOfContract .. endOfContract } } Specifying dates within the same year: alice may { see ( data ) } asLongAs { within { ( 1 of May )..( 1 of June ) year 2022 } }","title":"Formats"},{"location":"Language/Clauses/","text":"Clauses \u00b6 Clauses have the following grammar: Subject ( may | mayNot ) { action ( thing ) } unless | asLongAs { circumstance1 circumstance2 } Allowance has the following semantics: There are 4 possible results to a \"Can this happen\" question: Allow , Forbid , Unspecified ( the agreement just does not say) or Depends (circumstances are too general for a specific answer) The combination of existing clauses will determine the answer to a \"Can this happen\" question. In particular, more a result that would come out as Unspecified , more specific clauses can be used to further narrow down the result. Clause Circumstance C Action A may A asLongAs C True Allowed False Unspecified may A unless C True Unspecified False Allowed mayNot A asLongAs C True Forbidden False Unspecified mayNot A unless C True Unspecified False Forbidden The idea is to follow a 'least surprise' principle, meaning that the contract allows and forbids exactly as it reads. For example, 'Alice may share data unless with commercial purpose ' means that Alice is allowed share the data in general, but is not necessarily forbidden from sharing it with commercial purpose - she is just not explicitly allowed from doing so. If we wish to stop alice from sharing data with commercial purpose, we also need the following sentence 'Alice may not share data as long as with commercial purpose '. We need both of these sentences to specify, in english, that 'Alice is allowed to share data in general but is forbidden from doing so with commercial purposes'. This encourages contract authors to be very specific concerning the behaviour they wish to describe, and allows contract readers to not need to make assumptions. For more examples, please see the table below: Sentence Purpose Alice eat cake? Alice may eatCake unless with purpose Commercial Research Allowed Commercial Unspecified no purpose specified Depends Alice mayNot eatCake asLongAs with purpose Commercial Research Unspecified Commercial Forbidden no purpose specified Depends","title":"Clauses"},{"location":"Language/Clauses/#clauses","text":"Clauses have the following grammar: Subject ( may | mayNot ) { action ( thing ) } unless | asLongAs { circumstance1 circumstance2 } Allowance has the following semantics: There are 4 possible results to a \"Can this happen\" question: Allow , Forbid , Unspecified ( the agreement just does not say) or Depends (circumstances are too general for a specific answer) The combination of existing clauses will determine the answer to a \"Can this happen\" question. In particular, more a result that would come out as Unspecified , more specific clauses can be used to further narrow down the result. Clause Circumstance C Action A may A asLongAs C True Allowed False Unspecified may A unless C True Unspecified False Allowed mayNot A asLongAs C True Forbidden False Unspecified mayNot A unless C True Unspecified False Forbidden The idea is to follow a 'least surprise' principle, meaning that the contract allows and forbids exactly as it reads. For example, 'Alice may share data unless with commercial purpose ' means that Alice is allowed share the data in general, but is not necessarily forbidden from sharing it with commercial purpose - she is just not explicitly allowed from doing so. If we wish to stop alice from sharing data with commercial purpose, we also need the following sentence 'Alice may not share data as long as with commercial purpose '. We need both of these sentences to specify, in english, that 'Alice is allowed to share data in general but is forbidden from doing so with commercial purposes'. This encourages contract authors to be very specific concerning the behaviour they wish to describe, and allows contract readers to not need to make assumptions. For more examples, please see the table below: Sentence Purpose Alice eat cake? Alice may eatCake unless with purpose Commercial Research Allowed Commercial Unspecified no purpose specified Depends Alice mayNot eatCake asLongAs with purpose Commercial Research Unspecified Commercial Forbidden no purpose specified Depends","title":"Clauses"}]}